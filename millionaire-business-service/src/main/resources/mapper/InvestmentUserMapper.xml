<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.millionaire.millionairebusinessservice.dao.InvestmentUserMapper">
    <resultMap id="BaseResultMap" type="com.millionaire.millionairebusinessservice.module.InvestmentUser">
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="product_id" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="uid" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="value_date_start" javaType="java.util.Date" jdbcType="DATE" />
            <arg column="value_date_end" javaType="java.util.Date" jdbcType="DATE" />
            <arg column="lending_contract_number" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="contract_sign" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="investment_amount" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="investment_status" javaType="java.lang.Byte" jdbcType="TINYINT" />
            <arg column="project_status" javaType="java.lang.Byte" jdbcType="TINYINT" />
            <arg column="undistributed_income" javaType="java.lang.Double" jdbcType="DOUBLE" />
            <arg column="distributed_income" javaType="java.lang.Double" jdbcType="DOUBLE" />
            <arg column="translation_date" javaType="java.util.Date" jdbcType="DATE" />
            <arg column="gmt_create" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="gmt_update" javaType="java.lang.Long" jdbcType="BIGINT" />
        </constructor>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.millionaire.millionairebusinessservice.module.InvestmentUser">
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="product_id" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="uid" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="value_date_start" javaType="java.util.Date" jdbcType="DATE" />
            <arg column="value_date_end" javaType="java.util.Date" jdbcType="DATE" />
            <arg column="lending_contract_number" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="contract_sign" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="investment_amount" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="investment_status" javaType="java.lang.Byte" jdbcType="TINYINT" />
            <arg column="project_status" javaType="java.lang.Byte" jdbcType="TINYINT" />
            <arg column="undistributed_income" javaType="java.lang.Double" jdbcType="DOUBLE" />
            <arg column="distributed_income" javaType="java.lang.Double" jdbcType="DOUBLE" />
            <arg column="translation_date" javaType="java.util.Date" jdbcType="DATE" />
            <arg column="gmt_create" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="gmt_update" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="claim_id" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, product_id, uid, value_date_start, value_date_end, lending_contract_number, contract_sign,
        investment_amount, investment_status, project_status, undistributed_income, distributed_income,
        translation_date, gmt_create, gmt_update
    </sql>
    <sql id="Blob_Column_List">
        claim_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from investment_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from investment_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.millionaire.millionairebusinessservice.module.InvestmentUser" useGeneratedKeys="true" keyProperty="id">
        insert into investment_user (product_id, uid,
        value_date_start, value_date_end, lending_contract_number,
        contract_sign, investment_amount, investment_status,
        project_status, undistributed_income, distributed_income,
        translation_date, gmt_create, gmt_update,
        claim_id)
        values (#{productId,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT},
        #{valueDateStart,jdbcType=DATE}, #{valueDateEnd,jdbcType=DATE}, #{lendingContractNumber,jdbcType=VARCHAR},
        #{contractSign,jdbcType=VARCHAR}, #{investmentAmount,jdbcType=INTEGER}, #{investmentStatus,jdbcType=TINYINT},
        #{projectStatus,jdbcType=TINYINT}, #{undistributedIncome,jdbcType=DOUBLE}, #{distributedIncome,jdbcType=DOUBLE},
        #{translationDate,jdbcType=DATE}, #{gmtCreate,jdbcType=BIGINT}, #{gmtUpdate,jdbcType=BIGINT},
        #{claimId,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.millionaire.millionairebusinessservice.module.InvestmentUser" useGeneratedKeys="true" keyProperty="id">
        insert into investment_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                product_id,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="valueDateStart != null">
                value_date_start,
            </if>
            <if test="valueDateEnd != null">
                value_date_end,
            </if>
            <if test="lendingContractNumber != null">
                lending_contract_number,
            </if>
            <if test="contractSign != null">
                contract_sign,
            </if>
            <if test="investmentAmount != null">
                investment_amount,
            </if>
            <if test="investmentStatus != null">
                investment_status,
            </if>
            <if test="projectStatus != null">
                project_status,
            </if>
            <if test="undistributedIncome != null">
                undistributed_income,
            </if>
            <if test="distributedIncome != null">
                distributed_income,
            </if>
            <if test="translationDate != null">
                translation_date,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtUpdate != null">
                gmt_update,
            </if>
            <if test="claimId != null">
                claim_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                #{productId,jdbcType=BIGINT},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="valueDateStart != null">
                #{valueDateStart,jdbcType=DATE},
            </if>
            <if test="valueDateEnd != null">
                #{valueDateEnd,jdbcType=DATE},
            </if>
            <if test="lendingContractNumber != null">
                #{lendingContractNumber,jdbcType=VARCHAR},
            </if>
            <if test="contractSign != null">
                #{contractSign,jdbcType=VARCHAR},
            </if>
            <if test="investmentAmount != null">
                #{investmentAmount,jdbcType=INTEGER},
            </if>
            <if test="investmentStatus != null">
                #{investmentStatus,jdbcType=TINYINT},
            </if>
            <if test="projectStatus != null">
                #{projectStatus,jdbcType=TINYINT},
            </if>
            <if test="undistributedIncome != null">
                #{undistributedIncome,jdbcType=DOUBLE},
            </if>
            <if test="distributedIncome != null">
                #{distributedIncome,jdbcType=DOUBLE},
            </if>
            <if test="translationDate != null">
                #{translationDate,jdbcType=DATE},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=BIGINT},
            </if>
            <if test="gmtUpdate != null">
                #{gmtUpdate,jdbcType=BIGINT},
            </if>
            <if test="claimId != null">
                #{claimId,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.millionaire.millionairebusinessservice.module.InvestmentUser">
        update investment_user
        <set>
            <if test="productId != null">
                product_id = #{productId,jdbcType=BIGINT},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=BIGINT},
            </if>
            <if test="valueDateStart != null">
                value_date_start = #{valueDateStart,jdbcType=DATE},
            </if>
            <if test="valueDateEnd != null">
                value_date_end = #{valueDateEnd,jdbcType=DATE},
            </if>
            <if test="lendingContractNumber != null">
                lending_contract_number = #{lendingContractNumber,jdbcType=VARCHAR},
            </if>
            <if test="contractSign != null">
                contract_sign = #{contractSign,jdbcType=VARCHAR},
            </if>
            <if test="investmentAmount != null">
                investment_amount = #{investmentAmount,jdbcType=INTEGER},
            </if>
            <if test="investmentStatus != null">
                investment_status = #{investmentStatus,jdbcType=TINYINT},
            </if>
            <if test="projectStatus != null">
                project_status = #{projectStatus,jdbcType=TINYINT},
            </if>
            <if test="undistributedIncome != null">
                undistributed_income = #{undistributedIncome,jdbcType=DOUBLE},
            </if>
            <if test="distributedIncome != null">
                distributed_income = #{distributedIncome,jdbcType=DOUBLE},
            </if>
            <if test="translationDate != null">
                translation_date = #{translationDate,jdbcType=DATE},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=BIGINT},
            </if>
            <if test="gmtUpdate != null">
                gmt_update = #{gmtUpdate,jdbcType=BIGINT},
            </if>
            <if test="claimId != null">
                claim_id = #{claimId,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.millionaire.millionairebusinessservice.module.InvestmentUser">
        update investment_user
        set product_id = #{productId,jdbcType=BIGINT},
        uid = #{uid,jdbcType=BIGINT},
        value_date_start = #{valueDateStart,jdbcType=DATE},
        value_date_end = #{valueDateEnd,jdbcType=DATE},
        lending_contract_number = #{lendingContractNumber,jdbcType=VARCHAR},
        contract_sign = #{contractSign,jdbcType=VARCHAR},
        investment_amount = #{investmentAmount,jdbcType=INTEGER},
        investment_status = #{investmentStatus,jdbcType=TINYINT},
        project_status = #{projectStatus,jdbcType=TINYINT},
        undistributed_income = #{undistributedIncome,jdbcType=DOUBLE},
        distributed_income = #{distributedIncome,jdbcType=DOUBLE},
        translation_date = #{translationDate,jdbcType=DATE},
        gmt_create = #{gmtCreate,jdbcType=BIGINT},
        gmt_update = #{gmtUpdate,jdbcType=BIGINT},
        claim_id = #{claimId,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.millionaire.millionairebusinessservice.module.InvestmentUser">
        update investment_user
        set product_id = #{productId,jdbcType=BIGINT},
        uid = #{uid,jdbcType=BIGINT},
        value_date_start = #{valueDateStart,jdbcType=DATE},
        value_date_end = #{valueDateEnd,jdbcType=DATE},
        lending_contract_number = #{lendingContractNumber,jdbcType=VARCHAR},
        contract_sign = #{contractSign,jdbcType=VARCHAR},
        investment_amount = #{investmentAmount,jdbcType=INTEGER},
        investment_status = #{investmentStatus,jdbcType=TINYINT},
        project_status = #{projectStatus,jdbcType=TINYINT},
        undistributed_income = #{undistributedIncome,jdbcType=DOUBLE},
        distributed_income = #{distributedIncome,jdbcType=DOUBLE},
        translation_date = #{translationDate,jdbcType=DATE},
        gmt_create = #{gmtCreate,jdbcType=BIGINT},
        gmt_update = #{gmtUpdate,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
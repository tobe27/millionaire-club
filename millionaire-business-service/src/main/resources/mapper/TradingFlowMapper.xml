<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.millionaire.millionairebusinessservice.dao.TradingFlowMapper">
    <resultMap id="BaseResultMap" type="com.millionaire.millionairebusinessservice.module.TradingFlow">
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="uid" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="investmentUserId" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="product_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="amount" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="bank_card_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="pay_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="gmt_create" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="gmt_update" javaType="java.lang.Long" jdbcType="BIGINT"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
    id, uid,investment_user_id,product_name, phone, name, amount, type, bank_card_id, pay_type, status, gmt_create,
    gmt_update
  </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from trading_flow
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!--client-->
    <select id="findByUid" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM trading_flow
        WHERE uid=#{uid}
    </select>

    <resultMap id="UserTradingFlowMap" type="com.millionaire.millionairebusinessservice.transport.UserTradingFlowDTO">
        <id column="id" property="tradingFlowNumber" />
        <result column="phone" property="phone"/>
        <result column="name" property="name"/>
        <result column="product_name" property="productName"/>
        <result column="amount" property="amount"/>
        <result column="type" property="type"/>
        <result column="status" property="status"/>
        <result column="pay_type" property="bankName"/>
        <result column="gmt_create" property="gmtCreate"/>
    </resultMap>

    <select id="selectByUIDandQuery" resultMap="UserTradingFlowMap">
        select
        <include refid="Base_Column_List"/>
        from trading_flow
        <where>
            <if test="uid != null">
                uid = #{uid,jdbcType=BIGINT}
            </if>
            <if test="productName != null">
                and product_name = #{productName,jdbcType=VARCHAR}
            </if>
            <if test="type != null">
                and type = #{type,jdbcType=TINYINT}
            </if>
            <if test="status != null">
                and status = #{status,jdbcType=TINYINT}
            </if>
            <if test="lowerDate != null">
                and gmt_create <![CDATA[ >= ]]> #{lowerDate,jdbcType=BIGINT}
            </if>
            <if test="upperDate != null">
                and gmt_create <![CDATA[ <= ]]> #{upperDate,jdbcType=BIGINT}
            </if>
        </where>
    </select>

    <select id="statisticInvestmentProductByQuery"
            resultType="com.millionaire.millionairebusinessservice.transport.TradingFlowStatisticDTO"
            parameterType="com.millionaire.millionairebusinessservice.request.TradingFlowStatisticQuery">
        select
        trading_flow.product_name as productName,
        count(trading_flow.uid) as purchaseNumber,
        count(trading_flow.id) as purchase,
        sum(trading_flow.amount) as totalPurchases,

        investment_product.id as productId,
        investment_product.product_code as productCode

        from trading_flow
        left join investment_product
        on trading_flow.product_name =investment_product.name
        <where>
            <if test="type != null">
                trading_flow.type = #{type,jdbcType=TINYINT}
            </if>
            <if test="status != null">
                and trading_flow.status = #{status,jdbcType=TINYINT}
            </if>
            <if test="pruductName != null">
                and trading_flow.product_name = #{pruductName,jdbcType=VARCHAR}
            </if>
            <if test="poductCode != null">
                and investment_product.product_code = #{poductCode,jdbcType=VARCHAR}
            </if>
        </where>
        group by
        trading_flow.product_name
    </select>

    <select id="statisticProductDetailByQuery"
            parameterType="com.millionaire.millionairebusinessservice.request.TradingFlowDetailQuery"
            resultType="com.millionaire.millionairebusinessservice.transport.TradingFlowDetailDTO">
        select
        FROM_UNIXTIME(gmt_create/1000, '%Y-%m-%d') as purchaseDate,
        count(uid) as purchaseNumber,
        count(id) as purchase,
        sum(amount) as totalPurchases
        from
        trading_flow
        <where>
            <if test="lowerDate != null">
                gmt_create  <![CDATA[ >= ]]> #{lowerDate,jdbcType=BIGINT}
            </if>
            <if test="upperDate != null">
                and gmt_create <![CDATA[ <= ]]>  #{upperDate,jdbcType=BIGINT}
            </if>
            <if test="type != null">
                and type = #{type,jdbcType=TINYINT}
            </if>
            <if test="status != null">
                and status = #{status,jdbcType=TINYINT}
            </if>
            <if test="productName != null">
                and product_name = #{productName,jdbcType=VARCHAR}
            </if>
        </where>

        group  by
        FROM_UNIXTIME(gmt_create/1000, '%Y%m%d')
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from trading_flow
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.millionaire.millionairebusinessservice.module.TradingFlow"
            useGeneratedKeys="true" keyProperty="id">
    insert into trading_flow (uid,investment_user_id,product_name, phone,
      name, amount, type, 
      bank_card_id, pay_type, status, 
      gmt_create, gmt_update)
    values (#{uid,jdbcType=BIGINT},#{investmentUserId,jdbcType=BIGINT},#{productName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, 
      #{bankCardId,jdbcType=VARCHAR}, #{payType,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{gmtCreate,jdbcType=BIGINT}, #{gmtUpdate,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="com.millionaire.millionairebusinessservice.module.TradingFlow">
        insert into trading_flow
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="investmentUserId != null">
                investment_user_id,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="bankCardId != null">
                bank_card_id,
            </if>
            <if test="payType != null">
                pay_type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtUpdate != null">
                gmt_update,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="investmentUserId != null">
                #{investmentUserId,jdbcType=BIGINT},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="bankCardId != null">
                #{bankCardId,jdbcType=VARCHAR},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=BIGINT},
            </if>
            <if test="gmtUpdate != null">
                #{gmtUpdate,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.millionaire.millionairebusinessservice.module.TradingFlow">
        update trading_flow
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=BIGINT},
            </if>
            <if test="investmentUserId != null">
                investment_user_id=#{investmentUserId,jdbcType=BIGINT},
            </if>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="bankCardId != null">
                bank_card_id = #{bankCardId,jdbcType=VARCHAR},
            </if>
            <if test="payType != null">
                pay_type = #{payType,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=BIGINT},
            </if>
            <if test="gmtUpdate != null">
                gmt_update = #{gmtUpdate,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.millionaire.millionairebusinessservice.module.TradingFlow">
    update trading_flow
    set
      uid = #{uid,jdbcType=BIGINT},
      investment_user_id = #{investmentUserId,jdbcType=BIGINT},
      product_name = #{productName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      bank_card_id = #{bankCardId,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      gmt_create = #{gmtCreate,jdbcType=BIGINT},
      gmt_update = #{gmtUpdate,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!--修改交易记录状态-->
    <update id="updateTradingFlowStatus">
    update trading_flow
    set
      status = #{status,jdbcType=TINYINT},
      gmt_update = #{gmtUpdate,jdbcType=BIGINT}
    where investment_user_id = #{investmentUserId,jdbcType=BIGINT} and TYPE = -1
    </update>
</mapper>
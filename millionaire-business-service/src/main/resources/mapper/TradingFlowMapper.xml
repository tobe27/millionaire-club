<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.millionaire.millionairebusinessservice.dao.TradingFlowMapper">
    <resultMap id="BaseResultMap" type="com.millionaire.millionairebusinessservice.module.TradingFlow">
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="user_investment_id" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="product_name" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="uid" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="amount" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
            <arg column="bank_card_id" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
            <arg column="gmt_create" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="gmt_update" javaType="java.lang.Long" jdbcType="BIGINT" />
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_investment_id, product_name, uid, amount, type, bank_card_id, status, gmt_create,
        gmt_update
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from trading_flow
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from trading_flow
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.millionaire.millionairebusinessservice.module.TradingFlow" useGeneratedKeys="true" keyProperty="id">
        insert into trading_flow (user_investment_id, product_name,
        uid, amount, type, bank_card_id,
        status, gmt_create, gmt_update
        )
        values (#{userInvestmentId,jdbcType=BIGINT}, #{productName,jdbcType=BIGINT},
        #{uid,jdbcType=BIGINT}, #{amount,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{bankCardId,jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT}, #{gmtCreate,jdbcType=BIGINT}, #{gmtUpdate,jdbcType=BIGINT}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.millionaire.millionairebusinessservice.module.TradingFlow" useGeneratedKeys="true" keyProperty="id">
        insert into trading_flow
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userInvestmentId != null">
                user_investment_id,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="bankCardId != null">
                bank_card_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtUpdate != null">
                gmt_update,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userInvestmentId != null">
                #{userInvestmentId,jdbcType=BIGINT},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=BIGINT},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="bankCardId != null">
                #{bankCardId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=BIGINT},
            </if>
            <if test="gmtUpdate != null">
                #{gmtUpdate,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.millionaire.millionairebusinessservice.module.TradingFlow">
        update trading_flow
        <set>
            <if test="userInvestmentId != null">
                user_investment_id = #{userInvestmentId,jdbcType=BIGINT},
            </if>
            <if test="productName != null">
                product_name = #{productName,jdbcType=BIGINT},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=BIGINT},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="bankCardId != null">
                bank_card_id = #{bankCardId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=BIGINT},
            </if>
            <if test="gmtUpdate != null">
                gmt_update = #{gmtUpdate,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.millionaire.millionairebusinessservice.module.TradingFlow">
        update trading_flow
        set user_investment_id = #{userInvestmentId,jdbcType=BIGINT},
        product_name = #{productName,jdbcType=BIGINT},
        uid = #{uid,jdbcType=BIGINT},
        amount = #{amount,jdbcType=INTEGER},
        type = #{type,jdbcType=TINYINT},
        bank_card_id = #{bankCardId,jdbcType=VARCHAR},
        status = #{status,jdbcType=TINYINT},
        gmt_create = #{gmtCreate,jdbcType=BIGINT},
        gmt_update = #{gmtUpdate,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>